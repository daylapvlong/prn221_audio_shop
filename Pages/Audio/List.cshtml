@page
@model MuzicStore.Pages.Audio.ListModel
@using MuzicStore.Model

@{
    ViewData["Title"] = "Index";
    List<Genre> genre = (List<Genre>)ViewData["Genre"];
    List<Mood> mood = (List<Mood>)ViewData["Mood"];
    Layout = "~/Pages/Shared/_Layout.cshtml";
}

<div class="row d-flex justify-content-center text-center">

    <h3 class="fw-bold mt-4">AUDIO LIST</h3>
    <form method="get">
        <div class="row justify-content-center mt-4">
            <div class="form-group col-3">
                <input type="text" name="SearchString" value="@Model.CurrentFilter" class="form-control" placeholder="Search for audio...">
            </div>

            <div class="col-2">
                <select asp-for="@Model.GenreId" class="form-control">
                    <option value="all">All</option>
                    @foreach (var item in genre)
                    {
                        <option value="@item.Id">@item.Genre1</option>
                    }
                </select>
            </div>

            <div class="col-2">
                <select asp-for="@Model.MoodId" class="form-control">
                    <option value="all">All</option>
                    @foreach (var item in mood)
                    {
                        <option value="@item.Id">@item.MoodName</option>
                    }
                </select>
            </div>

            <div class="form-group col-3">
                <input type="submit" value="Search" class="btn btn-primary" />
            </div>
        </div>
    </form>

    <div class="col-8 mt-5">

        <table class="table table-borderless text-light">
            <thead class="text-center mb-5">
                <tr class="mb-5">
                    <th class="w-25 border-bottom-0"></th>
                    <th class="border-bottom">
                        @Html.DisplayNameFor(model => model.AudioList[0].Title)
                    </th>
                    <th class="border-bottom">
                        @Html.DisplayNameFor(model => model.AudioList[0].Genre)
                    </th>
                    <th class="border-bottom">
                        @Html.DisplayNameFor(model => model.AudioList[0].Mood)
                    </th>
                    <th class="border-bottom">
                        @Html.DisplayNameFor(model => model.AudioList[0].Artist)
                    </th>
                    <th class="border-bottom">
                        @Html.DisplayNameFor(model => model.AudioList[0].Price)
                    </th>
                    <th></th>
                </tr>
            </thead>
            <tbody class="text-center mt-5">
                @foreach (var item in Model.AudioList)
                {
                    <tr class="mt-5 audio" data-genre="@item.GenreId" data-mood="@item.MoodId" data-title="@item.Title.ToLower()">

                        <td>
                            <img src="@item.Image" style="aspect-ratio: 1" class="w-50">
                        </td>

                        <td>
                            <a class="fw-bold text-light text-decoration-none" asp-page="/Audio/Detail" asp-route-id="@item.Id">
                                @item.Title.ToUpper()
                            </a>
                        </td>

                        <td>@item.Genre.Genre1</td>
                        <td>@item.Mood.MoodName</td>
                        <td>@item.Artist.Name</td>
                        <td>$@item.Price</td>
                        @if (Model.User != null)
                        {
                            <td onclick="updateFavorite(@Model.User.Id, @item.Id, this)">
                                @if (Model.Favorites.Any(f => f.AudioId == item.Id))
                                {
                                    <i class="bi fs-4 bi-heart-fill"></i>
                                }
                                else
                                {
                                    <i class="bi fs-4 bi-heart"></i>
                                }
                            </td>
                        }
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

<script>
    function updateFavorite(userId, audioId, likeButton) {

        let heartIcon = likeButton.querySelector('i');

        if (heartIcon.classList.contains("bi-heart-fill")) {
            heartIcon.classList.remove("bi-heart-fill");
            heartIcon.classList.add("bi-heart");
        } else if (heartIcon.classList.contains("bi-heart")) {
            // Check if it contains "bi-heart" class and toggle it with "bi-heart-fill"
            heartIcon.classList.remove("bi-heart");
            heartIcon.classList.add("bi-heart-fill");
        }

        fetch(`./Favor?userId=${userId}&audioId=${audioId}`)
    }
</script>